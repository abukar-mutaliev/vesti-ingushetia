require('dotenv').config();
const { sequelize, ScheduledNews } = require('./models');
const logger = require('./logger');

async function createTestScheduledNews() {
    try {
        await sequelize.authenticate();
        logger.info('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');

        // –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
        const now = new Date();
        const scheduledTime = new Date(now.getTime() + 2 * 60 * 1000); // +2 –º–∏–Ω—É—Ç—ã

        logger.info(`üïê –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏:`);
        logger.info(`   - now.getTime(): ${now.getTime()}`);
        logger.info(`   - now.toISOString(): ${now.toISOString()}`);
        logger.info(`   - scheduledTime.getTime(): ${scheduledTime.getTime()}`);
        logger.info(`   - scheduledTime.toISOString(): ${scheduledTime.toISOString()}`);

        const testNewsData = {
            title: '–¢–ï–°–¢–û–í–ê–Ø –ê–í–¢–û–ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø',
            content: '–≠—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –°–æ–∑–¥–∞–Ω–∞ –≤ ' + now.toISOString(),
            authorId: 6, // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (admin)
            categoryIds: [1], // ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ù–æ–≤–æ—Å—Ç–∏"
            mediaFiles: []
        };

        logger.info(`üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è:`);
        logger.info(`   - title: ${testNewsData.title}`);
        logger.info(`   - scheduledDate: ${scheduledTime}`);
        logger.info(`   - scheduledDate ISO: ${scheduledTime.toISOString()}`);

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ë–ï–ó –æ–±–µ—Ä—Ç–∫–∏ –≤ new Date() - –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
        const scheduledNews = await ScheduledNews.create({
            title: testNewsData.title,
            scheduledDate: scheduledTime, // –ü–µ—Ä–µ–¥–∞–µ–º —É–∂–µ –≥–æ—Ç–æ–≤—ã–π Date –æ–±—ä–µ–∫—Ç
            newsData: JSON.stringify(testNewsData),
            authorId: testNewsData.authorId,
            status: 'scheduled'
        });

        logger.info(`üöÄ –°–æ–∑–¥–∞–Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å:`);
        logger.info(`   - –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${testNewsData.title}"`);
        logger.info(`   - –ê–≤—Ç–æ—Ä ID: ${testNewsData.authorId} (admin)`);
        logger.info(`   - –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID: ${testNewsData.categoryIds[0]} (–ù–æ–≤–æ—Å—Ç–∏)`);
        logger.info(`   - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${now.toISOString()}`);
        logger.info(`   - –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞: ${scheduledTime.toISOString()}`);
        logger.info(`   - ID –∑–∞–ø–∏—Å–∏: ${scheduledNews.id}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å –≤ –±–∞–∑–µ
        const savedNews = await ScheduledNews.findByPk(scheduledNews.id);
        logger.info(`\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏:`);
        logger.info(`   - –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫: ${savedNews.scheduledDate.toISOString()}`);
        logger.info(`   - –†–∞–∑–Ω–∏—Ü–∞ —Å –æ–∂–∏–¥–∞–µ–º—ã–º: ${savedNews.scheduledDate.getTime() - scheduledTime.getTime()}ms`);

        console.log('\nüéØ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ test-scheduler.js');
        console.log('   –∏ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –Ω–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è');

    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏:', error);
        process.exit(1);
    }
}

createTestScheduledNews(); 