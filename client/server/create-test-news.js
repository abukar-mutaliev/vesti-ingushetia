require('dotenv').config();
const { sequelize, ScheduledNews } = require('./models');
const logger = require('./logger');

async function createTestScheduledNews() {
    try {
        await sequelize.authenticate();
        logger.info('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å –Ω–∞ 2 –º–∏–Ω—É—Ç—ã –≤–ø–µ—Ä–µ–¥
        const now = new Date();
        const scheduledTime = new Date(now.getTime() + 2 * 60 * 1000); // +2 –º–∏–Ω—É—Ç—ã

        const testNewsData = {
            title: '–¢–ï–°–¢–û–í–ê–Ø –ê–í–¢–û–ü–£–ë–õ–ò–ö–ê–¶–ò–Ø',
            content: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –°–æ–∑–¥–∞–Ω–∞ –≤ ' + now.toISOString(),
            authorId: 1, // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            categoryIds: [1], // ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            mediaFiles: []
        };

        const scheduledNews = await ScheduledNews.create({
            title: testNewsData.title,
            scheduledDate: scheduledTime,
            newsData: JSON.stringify(testNewsData),
            authorId: testNewsData.authorId,
            status: 'scheduled'
        });

        logger.info(`üöÄ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å:`);
        logger.info(`   - –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${testNewsData.title}"`);
        logger.info(`   - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${now.toISOString()}`);
        logger.info(`   - –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞: ${scheduledTime.toISOString()}`);
        logger.info(`   - –í—Ä–µ–º—è –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: 2 –º–∏–Ω—É—Ç—ã`);
        logger.info(`   - ID –∑–∞–ø–∏—Å–∏: ${scheduledNews.id}`);

        console.log('\nüéØ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ test-scheduler.js');
        console.log('   –∏ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –Ω–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è');

    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏:', error);
        process.exit(1);
    }
}

createTestScheduledNews(); 