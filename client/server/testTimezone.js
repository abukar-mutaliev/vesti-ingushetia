// testTimezone.js - –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –∫–æ—Ä–µ–Ω—å server/
// –ó–∞–ø—É—Å–∫: node testTimezone.js

require('dotenv').config();

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É
process.env.TZ = 'Europe/Moscow';

const MoscowTimeUtils = require('./utils/moscowTimeUtils');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–æ–Ω –¥–ª—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
console.log('üìä –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
console.log(`   process.env.TZ: ${process.env.TZ}`);
console.log(`   NODE_ENV: ${process.env.NODE_ENV}`);
console.log(`   Intl.DateTimeFormat().resolvedOptions().timeZone: ${Intl.DateTimeFormat().resolvedOptions().timeZone}`);

// 2. –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
console.log('\nüïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:');
const now = new Date();
console.log(`   UTC: ${now.toISOString()}`);
console.log(`   Local: ${now.toString()}`);
console.log(`   Moscow: ${MoscowTimeUtils.formatMoscowTime(now)}`);

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ—â–µ–Ω–∏—è
console.log('\n‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ—â–µ–Ω–∏—è:');
const moscowOffset = 3; // UTC+3
const localOffset = -now.getTimezoneOffset() / 60;
console.log(`   –ú–µ—Å—Ç–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ: UTC${localOffset >= 0 ? '+' : ''}${localOffset}`);
console.log(`   –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —Å–º–µ—â–µ–Ω–∏–µ: UTC+${moscowOffset}`);
console.log(`   –†–∞–∑–Ω–∏—Ü–∞: ${Math.abs(localOffset - moscowOffset)} —á–∞—Å–æ–≤`);

// 4. –¢–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏
console.log('\nüìÖ –¢–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏:');

// –¢–µ—Å—Ç 1: –ë—É–¥—É—â–∞—è –¥–∞—Ç–∞ (—á–µ—Ä–µ–∑ 2 —á–∞—Å–∞)
const futureDate = new Date();
futureDate.setHours(futureDate.getHours() + 2);

console.log('\n   –¢–µ—Å—Ç 1: –ù–æ–≤–æ—Å—Ç—å —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞');
console.log(`   –î–∞—Ç–∞: ${futureDate.toISOString()}`);
console.log(`   –ú–æ—Å–∫–≤–∞: ${MoscowTimeUtils.formatMoscowTime(futureDate)}`);

const validation1 = MoscowTimeUtils.validateScheduleDate(futureDate.toISOString());
console.log(`   –í–∞–ª–∏–¥–∞—Ü–∏—è: ${validation1.valid ? '‚úÖ –ü—Ä–æ—à–ª–∞' : '‚ùå –ù–µ –ø—Ä–æ—à–ª–∞'}`);
if (!validation1.valid) console.log(`   –û—à–∏–±–∫–∞: ${validation1.error}`);

// –¢–µ—Å—Ç 2: –ü—Ä–æ—à–µ–¥—à–∞—è –¥–∞—Ç–∞
const pastDate = new Date();
pastDate.setHours(pastDate.getHours() - 1);

console.log('\n   –¢–µ—Å—Ç 2: –ù–æ–≤–æ—Å—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º (—á–∞—Å –Ω–∞–∑–∞–¥)');
console.log(`   –î–∞—Ç–∞: ${pastDate.toISOString()}`);
console.log(`   –ú–æ—Å–∫–≤–∞: ${MoscowTimeUtils.formatMoscowTime(pastDate)}`);

const validation2 = MoscowTimeUtils.validateScheduleDate(pastDate.toISOString());
console.log(`   –í–∞–ª–∏–¥–∞—Ü–∏—è: ${validation2.valid ? '‚úÖ –ü—Ä–æ—à–ª–∞' : '‚ùå –ù–µ –ø—Ä–æ—à–ª–∞'}`);
if (!validation2.valid) console.log(`   –û—à–∏–±–∫–∞: ${validation2.error}`);

// –¢–µ—Å—Ç 3: –î–∞—Ç–∞ –Ω–∞ –≥—Ä–∞–Ω–∏ (—á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥)
const borderDate = new Date();
borderDate.setSeconds(borderDate.getSeconds() + 30);

console.log('\n   –¢–µ—Å—Ç 3: –ù–æ–≤–æ—Å—Ç—å —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥');
console.log(`   –î–∞—Ç–∞: ${borderDate.toISOString()}`);
console.log(`   –ú–æ—Å–∫–≤–∞: ${MoscowTimeUtils.formatMoscowTime(borderDate)}`);

const validation3 = MoscowTimeUtils.validateScheduleDate(borderDate.toISOString());
console.log(`   –í–∞–ª–∏–¥–∞—Ü–∏—è: ${validation3.valid ? '‚úÖ –ü—Ä–æ—à–ª–∞' : '‚ùå –ù–µ –ø—Ä–æ—à–ª–∞'}`);
if (!validation3.valid) console.log(`   –û—à–∏–±–∫–∞: ${validation3.error}`);

// 5. –≠–º—É–ª—è—Ü–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
console.log('\nüíª –≠–º—É–ª—è—Ü–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:');

// –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –¥–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
const userSelectedTime = '2025-06-11T15:30'; // –ü—Ä–∏–º–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª 15:30
console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: ${userSelectedTime} (datetime-local)`);

// –≠–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
const localDate = new Date(userSelectedTime);
console.log(`   –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ JS: ${localDate.toString()}`);
console.log(`   UTC –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${localDate.toISOString()}`);

// –≠–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
const serverReceivedDate = new Date(localDate.toISOString());
console.log(`   –°–µ—Ä–≤–µ—Ä –ø–æ–ª—É—á–∏–ª UTC: ${serverReceivedDate.toISOString()}`);
console.log(`   –°–µ—Ä–≤–µ—Ä –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –∫–∞–∫ –ú–æ—Å–∫–≤–∞: ${MoscowTimeUtils.formatMoscowTime(serverReceivedDate)}`);

// 6. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è –∏–∑ –ë–î
console.log('\nüíæ –≠–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ë–î:');

const scheduleTestDate = new Date();
scheduleTestDate.setHours(scheduleTestDate.getHours() + 3);

console.log('   –ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞:');
MoscowTimeUtils.logTimeComparison('–ò—Å—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞', scheduleTestDate);

// –≠–º—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î (–∫–∞–∫ ISO string)
const savedToDb = scheduleTestDate.toISOString();
console.log(`   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: ${savedToDb}`);

// –≠–º—É–ª—è—Ü–∏—è —á—Ç–µ–Ω–∏—è –∏–∑ –ë–î
const readFromDb = new Date(savedToDb);
console.log('   –ü—Ä–æ—á–∏—Ç–∞–Ω–æ –∏–∑ –ë–î:');
MoscowTimeUtils.logTimeComparison('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –¥–∞—Ç–∞', readFromDb);

// 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è:');
const originalMoscow = MoscowTimeUtils.formatMoscowTime(scheduleTestDate);
const restoredMoscow = MoscowTimeUtils.formatMoscowTime(readFromDb);

console.log(`   –ò—Å—Ö–æ–¥–Ω–æ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: ${originalMoscow}`);
console.log(`   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: ${restoredMoscow}`);
console.log(`   –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${originalMoscow === restoredMoscow ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);

// 8. –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
console.log('\nüîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
const debugInfo = MoscowTimeUtils.getTimeDebugInfo();
Object.entries(debugInfo).forEach(([key, value]) => {
    console.log(`   ${key}: ${value}`);
});

// 9. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('   1. ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ Europe/Moscow');
console.log('   2. ‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤—Ä–µ–º—è –∫–∞–∫ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤ UTC —Ñ–æ—Ä–º–∞—Ç–µ');
console.log('   3. ‚úÖ –°–µ—Ä–≤–µ—Ä –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∫–∞–∫ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ');
console.log('   4. ‚úÖ –ü—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ MoscowTimeUtils.formatMoscowTime()');
console.log('   5. ‚úÖ –î–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ MoscowTimeUtils.validateScheduleDate()');

console.log('\nüéâ –¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω!');

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
module.exports = {
    testBasicTimezone: () => {
        const info = MoscowTimeUtils.getTimeDebugInfo();
        console.log('–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã:', info);
        return info;
    },

    testScheduleValidation: (dateString) => {
        const result = MoscowTimeUtils.validateScheduleDate(dateString);
        console.log('–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', result);
        return result;
    }
};