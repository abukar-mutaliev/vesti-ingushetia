require('dotenv').config({ path: './client/server/.env' });
const { Media } = require('./client/server/models');
const path = require('path');
const fs = require('fs');

async function testFileProtection() {
    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∑–∞—â–∏—Ç—ã —Ñ–∞–π–ª–æ–≤...\n');

        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
        const uploadsDir = path.join(__dirname, 'client', 'uploads', 'images');
        const files = fs.readdirSync(uploadsDir);
        console.log(`üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ: ${files.length}`);

        // –ü–æ–ª—É—á–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –ë–î
        const mediaUrls = await Media.findAll({
            where: { type: 'image' },
            attributes: ['url', 'id'],
            include: [{
                model: require('./client/server/models').News,
                as: 'news',
                attributes: ['id', 'title', 'createdAt']
            }]
        });

        console.log(`üõ°Ô∏è –ó–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ë–î: ${mediaUrls.length}\n`);

        const usedFilenames = mediaUrls.map(media => path.basename(media.url));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        console.log('üìã –ü—Ä–∏–º–µ—Ä—ã –ó–ê–©–ò–©–ï–ù–ù–´–• —Ñ–∞–π–ª–æ–≤ (–∏–∑ –ë–î):');
        mediaUrls.slice(0, 5).forEach((media, index) => {
            const fileName = path.basename(media.url);
            const newsTitle = media.news?.[0]?.title || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –Ω–æ–≤–æ—Å—Ç–∏';
            console.log(`${index + 1}. ${fileName} - "${newsTitle}"`);
        });

        // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º—ã–µ —Ñ–∞–π–ª—ã
        const orphanedFiles = files.filter(file => !usedFilenames.includes(file));
        
        console.log(`\nüóëÔ∏è –§–∞–π–ª—ã –ë–ï–ó –∑–∞—â–∏—Ç—ã (–±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã): ${orphanedFiles.length}`);
        if (orphanedFiles.length > 0) {
            orphanedFiles.slice(0, 5).forEach((file, index) => {
                console.log(`${index + 1}. ${file} - —Å–∏—Ä–æ—Ç–∞, –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å`);
            });
        } else {
            console.log('–í—Å–µ —Ñ–∞–π–ª—ã –∑–∞—â–∏—â–µ–Ω—ã! üéâ');
        }

        console.log(`\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:`);
        console.log(`   –ó–∞—â–∏—â–µ–Ω–æ: ${files.length - orphanedFiles.length} —Ñ–∞–π–ª–æ–≤`);
        console.log(`   –ö —É–¥–∞–ª–µ–Ω–∏—é: ${orphanedFiles.length} —Ñ–∞–π–ª–æ–≤`);
        console.log(`   –°—Ç–∞—Ä—ã–µ –Ω–æ–≤–æ—Å—Ç–∏: –ë–ï–ó–û–ü–ê–°–ù–´ ‚úÖ`);

        process.exit(0);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        process.exit(1);
    }
}

testFileProtection(); 